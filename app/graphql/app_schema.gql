type Appointment {
  course: Course!
  faculty: Faculty!
  id: ID!
  student: Student!
}

type Authentication {
  id: ID!
  ip: String!
  user: Me!
}

type Course {
  id: ID!
  name: String!
}

type Faculty {
  id: ID!
  name: String!
}

input LoginInput {
  email: String!
  password: String!
}

"""
Autogenerated return type of LoginMutation.
"""
type LoginMutationPayload {
  authentication: Authentication
  error: String
}

"""
Autogenerated return type of LogoutMutation.
"""
type LogoutMutationPayload {
  authentication: Authentication
}

type Me {
  email: String!
  id: ID!
  name: String!
}

type Mutation {
  login(input: LoginInput!): LoginMutationPayload!
  logout: LogoutMutationPayload!
}

type Query {
  appointments: [Appointment!]!
  courses: [Course!]!
  faculties: [Faculty!]!
  users: [User!]!
}

type Student {
  id: ID!
  name: String!
}

type User {
  id: ID!
  name: String!
}
